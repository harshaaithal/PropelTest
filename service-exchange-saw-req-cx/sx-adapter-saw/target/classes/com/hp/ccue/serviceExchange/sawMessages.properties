TICKET_PROPERTIES_NAME=Title
TICKET_PROPERTIES_DESCRIPTION=Description
TICKET_PROPERTIES_REQUESTED_FOR_PERSON=Requested For
TICKET_PROPERTIES_METAPHASE=Metaphase
TICKET_PROPERTIES_SOLUTION=Solution
TICKET_ACTION_ACCEPT_NAME=Accept
TICKET_ACTION_ACCEPT_DESCRIPTION=Invoke to accept the solution
TICKET_ACTION_REJECT_NAME=Reject
TICKET_ACTION_REJECT_DESCRIPTION=Invoke to reject the solution
TICKET_ACTION_CLOSE_NAME=Mark As Solved
TICKET_ACTION_CLOSE_DESCRIPTION=Invoke to mark request as solved
TICKET_ACTION_MESSAGE_PARAMETER=Message
DID_NOT_FILL_SOLUTION=User of external system did not fill solution!!
QUERY_SYNTAX_ERROR=There is syntax error in query filter.
QUERY_EXECUTION_ERROR=Failed to execute the query filter.
AGGREGATION_SOURCE_FILTER_HINT=<h3>Enter additional query conditions here to further filter aggregated catalog items.</h3> \
    <h4>Use SAW REST API query language which includes the following operators (for details see SAW online help):</h4> \
    <ul> \
       <li>and, or - logical operators</li> \
       <li>=, !=, <, <=, >, >=, btw, not bwt, in, not in - comparison operators</li> \
       <li>startswith - starts-with string operator</li> \
    </ul> \
    \
    <h4>In the query you can use e.g. the following columns:</h4> \
    <ul> \
       <li>DisplayLabel - Offering label</li> \
       <li>Service.DisplayLabel - SAW Service</li> \
       <li>Service.Category - SAW Category</li> \
       <li>Service.OwnedByPerson - Offering owner</li> \
       <li>LastUpdateTime - Last updated time</li> \
       <li>Id - Offering id</li> \
    </ul> \
    \
    <h4>Examples:</h4> \
    <ul> \
       <li>Service.DisplayLabel='PC Accessories Service' and DisplayLabel startswith('Request new')</li> \
       <li>Service.Category='11175'</li> \
       <li>Service.OwnedByPerson='15425'</li> \
    </ul>
INSTANCE_CFG_ENDPOINT_NAME=Endpoint
INSTANCE_CFG_ENDPOINT_HELP=Base url for SAW REST endpoints (i.e. their part preceding the /rest segment).
INSTANCE_CFG_USER_NAME=User
INSTANCE_CFG_USER_HELP=Credentials of the SAW user used as the integration user
INSTANCE_CFG_LOGINNAME_NAME=Login name
INSTANCE_CFG_LOGINNAME_HELP=Login name of the SAW integration user
INSTANCE_CFG_PASSWORD_NAME=Password
INSTANCE_CFG_PASSWORD_HELP=Password of the SAW integration user
INSTANCE_CFG_ORGANIZATION_NAME=SAW tenant
INSTANCE_CFG_ORGANIZATION_HELP=SAW tenant id
INSTANCE_CFG_DEFAULT_CATEGORY_NAME=Default category name
INSTANCE_CFG_DEFAULT_CATEGORY_HELP=Category value for incidents created by case exchange (required if incident case exchange is used)
INSTANCE_CFG_DEFAULT_REGISTERED_FOR_ACTUAL_SERVICE_NAME=Default service
INSTANCE_CFG_DEFAULT_REGISTERED_FOR_ACTUAL_SERVICE_HELP=Service that the incidents created by case exchange will be assigned to by default (required if incident case exchange is used)
INSTANCE_CFG_R2F_ENABLED_NAME=R2F enabled
INSTANCE_CFG_R2F_ENABLED_HELP=Whether to enable full R2F (request-to-fulfil) support. Set this to false if you don't use R2F to avoid SAW polling overhead
INSTANCE_CFG_TICKETING_ENABLED_NAME=Ticketing enabled
INSTANCE_CFG_TICKETING_ENABLED_HELP=Whether to enable full ticketing support. Set this to false if you don't use ticketing to avoid SAW polling overhead

INSTANCE_CFG_PROXY_NAME=Proxy
INSTANCE_CFG_PROXY_HELP=Proxy server configuration, if you can't connect directly to SAW server
INSTANCE_CFG_PROTOCOL_NAME=Protocol
INSTANCE_CFG_PROTOCOL_HELP=Proxy server protocol (http or https)
INSTANCE_CFG_HOST_NAME=Host name
INSTANCE_CFG_HOST_HELP=Proxy server host name
INSTANCE_CFG_PORT_NAME=Port
INSTANCE_CFG_PORT_HELP=Proxy server port number (e.g. 8080)

SawInstancePingHealthCheck.failed.exception=Ping failed with exception: {0}
SawInstancePingHealthCheck.failed.status=Ping failed; status code: {0}; URI: {1}
SawInstanceLoginHealthCheck.failed.exception=Login failed with exception: {0}
SawInstanceLoginHealthCheck.failed.status=Login failed; status code: {0}; URI: {1}
SawInstanceLoginHealthCheck.getFailed.exception=Failed to get integration user with exception: {0}
SawInstanceLoginHealthCheck.getFailed.status=Failed to get integration user; status code: {0}; URI: {1}

processingError.checkServiceRequestRequestor=User {0} is not the Requested For person for this service request.
processingError.checkSupportRequestRequestor=User {0} is not the Requested For person for this support request.
processingError.getOffering.notFound=Offering not found.
processingError.userNotRegisteredInSaw=User {0} is not registered in SAW instance.
